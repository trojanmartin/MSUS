<?xml version="1.0" encoding="UTF-8"?>
<document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://modeler.netgrif.com/petriflow_schema.xsd">
	<id>User</id>
	<initials>User</initials>
	<title>User</title>
	<defaultRole>true</defaultRole>
	<transitionRole>false</transitionRole>
	<!-- TRANSACTIONS -->
	<!-- ROLES -->
	<role>
		<id>Admin</id>
		<title>Admin</title>
	</role>
	<role>
		<id>User</id>
		<title>User</title>
	</role>
	<!-- DATA -->
	<data type="number">
		<id>number_3</id>
		<title>Konto</title>
		<init>0</init>
	</data>
	<data type="text">
		<id>text_4</id>
		<title>Meno</title>
		<placeholder>Meno</placeholder>
	</data>
	<data type="text">
		<id>text_5</id>
		<title>Priezvisko</title>
		<placeholder>Priezvisko</placeholder>
	</data>
	<data type="number">
		<id>number_4</id>
		<title>Suma na doplnenie</title>
		<init>0</init>
	</data>
	<data type="caseRef">
		<id>subscriptions</id>
		<title>Predplatené služby</title>
	</data>
	<data type="enumeration">
		<id>enumeration_0</id>
		<title>Dostupné služby</title>
		<init>option1</init>
	</data>
	<data type="taskRef">
		<id>taskRef_0</id>
		<title>set label</title>
		<placeholder>placeholder</placeholder>
		<desc>description</desc>
		<init>value</init>
	</data>
	<data type="text">
		<id>text_0</id>
		<title>userId</title>
		<placeholder>placeholder</placeholder>
		<desc>description</desc>
		<init>0</init>
	</data>
	<!-- I18NS -->
	<!-- TRANSITIONS -->
	<transition>
		<id>4</id>
		<x>187</x>
		<y>71</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Doplň konto</label>
		<icon>attach_money</icon>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>User</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>Admin</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<dataGroup>
			<id>DataGroup_0</id>
			<dataRef>
				<id>number_4</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>netgrif</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="finish">
			<id>4_finish</id>
			<actions phase="pre">
				<action>cis: f.number_3,
						dopln: f.number_4;

						change cis value {
							return cis.value + dopln.value;
						}
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>5</id>
		<x>92</x>
		<y>66</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Profil</label>
		<icon>face</icon>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>Admin</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>User</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<dataGroup>
			<id>DataGroup_2</id>
			<layout>grid</layout>
			<dataRef>
				<id>text_0</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>6</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<dataGroup>
			<id>DataGroup_1</id>
			<dataRef>
				<id>text_4</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>text_5</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<dataGroup>
			<id>DataGroup_0</id>
			<dataRef>
				<id>number_3</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>2</y>
					<rows>3</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>5_assign</id>
			<actions phase="post">
				<action>		
				meno: f.text_4,
				priezvisko: f.text_5,
				userId: f.text_0;

				
				if(userId.value == "0")
				{
					change userId value {
						userService.getLoggedOrSystem().id;
					}
				}
				
				change meno value {
					userService.findById(userId.value, false).name;
				}

				change priezvisko value {
					userService.findById(userId.value, false).surname;
				}

</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>8</id>
		<x>289</x>
		<y>154</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Pridaj nové predplatné</label>
		<icon>plus_one</icon>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>Admin</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>User</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<event type="assign">
			<id>8_assign</id>
			<actions phase="post">
				<action>				
				userId: f.text_0;

				
				if(userId.value == "0")
				{
					change userId value {
						userService.getLoggedOrSystem().id;
					}
				}
				</action>
			</actions>
		</event>
		<event type="finish">
			<id>8_finish</id>
			<actions phase="post">
				<action>				
				userId: f.text_0;
				
				def predplatne = createCase("5f86b23ef9ac3b272d6c7779_predplatne", "Predplatné")
				
				def vytvorit = findTask( { it.caseId.eq(predplatne.stringId) &amp; it.transitionId.eq("2")});
				
				setData(vytvorit, [
						 "text_8": [
						 "value": userId.value,
						 "type" : "text"
						 ],
						])
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>10</id>
		<x>205</x>
		<y>347</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Pridaj novú službu do aplikácie</label>
		<icon>add_to_queue</icon>
		<roleRef>
			<id>Admin</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<dataGroup>
			<id>DataGroup_0</id>
			<dataRef>
				<id>taskRef_0</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>10_assign</id>
			<actions phase="post">
				<action>
					pridaj: f.taskRef_0;
						
					def sluzby = findCase({it.processIdentifier.eq("5f86b23ef9ac3b272d6c7779_Služba")});						
					def pridajSlubu = findTask({ it.transitionId.eq("1") &amp; it.caseId.eq(sluzby.stringId)});
					
					change pridaj value {
						[pridajSlubu.stringId]
					}
				</action>
			</actions>
		</event>
		<event type="finish">
			<id>10_finish</id>
			<actions phase="post">
				<action>				
					def sluzby = findCase({it.processIdentifier.eq("5f86b23ef9ac3b272d6c7779_Služba")});						
					def pridajSlubu = findTask({ it.transitionId.eq("1") &amp; it.caseId.eq(sluzby.stringId)});
					finishTask(pridajSlubu);
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>13</id>
		<x>342</x>
		<y>257</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Skontrolovať predplatné užívateľov</label>
		<icon>airplay</icon>
		<roleRef>
			<id>Admin</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>User</id>
			<logic>
			</logic>
		</roleRef>
		<event type="finish">
			<id>13_finish</id>
			<actions phase="post">
				<action>							
				def sluzby = findCases({it.processIdentifier.eq("5f86b23ef9ac3b272d6c7779_predplatne")});			
				
				
				for (sluzba in sluzby)
				{			
					if(1 == 1)
					{
						def task = findTask({ it.transitionId.eq("35") &amp; it.caseId.eq(sluzba.stringId)});
						
						def user = userService.findById(sluzba.dataSet["text_8"].value, false);						
						
						async.run 
						{
							assignTask(task, user);
							finishTask(task,user);
						}
						
					}
				}							
				</action>
			</actions>
		</event>
	</transition>
	<!-- PLACES -->
	<place>
		<id>3</id>
		<x>94</x>
		<y>260</y>
		<label></label>
		<tokens>1</tokens>
		<static>false</static>
	</place>
	<!-- ARCS -->
	<arc>
		<id>6</id>
		<type>read</type>
		<sourceId>3</sourceId>
		<destinationId>5</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>7</id>
		<type>read</type>
		<sourceId>3</sourceId>
		<destinationId>4</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>11</id>
		<type>read</type>
		<sourceId>3</sourceId>
		<destinationId>10</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>12</id>
		<type>read</type>
		<sourceId>3</sourceId>
		<destinationId>8</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>14</id>
		<type>read</type>
		<sourceId>3</sourceId>
		<destinationId>13</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
</document>
