<?xml version="1.0" encoding="UTF-8"?>
<document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://modeler.netgrif.com/petriflow_schema.xsd">
	<id>predplatne</id>
	<initials>predplatne</initials>
	<title>predplatne</title>
	<defaultRole>true</defaultRole>
	<transitionRole>false</transitionRole>
	<!-- TRANSACTIONS -->
	<!-- ROLES -->
	<role>
		<id>User</id>
		<title>User</title>
	</role>
	<role>
		<id>Admin</id>
		<title>Admin</title>
	</role>
	<!-- DATA -->
	<data type="enumeration_map">
		<id>enumeration_0</id>
		<title>Predplatné</title>
		<init>option1</init>
	</data>
	<data type="boolean">
		<id>boolean_0</id>
		<title>Automaticky predĺžiť</title>
		<init>false</init>
	</data>
	<data type="number">
		<id>number_0</id>
		<title>Konto</title>
		<init>0</init>
	</data>
	<data type="number">
		<id>number_1</id>
		<title>Suma k úhrade</title>
		<init>0</init>
	</data>
	<data type="number">
		<id>number_2</id>
		<title>Počet mesiacov</title>
		<valid>inrange 1,24</valid>
		<init>0</init>
	</data>
	<data type="text">
		<id>text_0</id>
		<title>created</title>
		<placeholder>placeholder</placeholder>
		<desc>description</desc>
		<init>value</init>
	</data>
	<data type="text">
		<id>text_1</id>
		<title>Typ predplatného</title>
	</data>
	<data type="text">
		<id>text_2</id>
		<title>Dátum vytvorenia</title>
	</data>
	<data type="text">
		<id>text_3</id>
		<title>Platné do</title>
	</data>
	<data type="text">
		<id>text_4</id>
		<title></title>
		<init>Nedostatok finančných prostriedkov</init>
	</data>
	<data type="button">
		<id>button_0</id>
		<title>Skúsiť znova</title>
	</data>
	<data type="button">
		<id>button_1</id>
		<title>Zmazať predplatné</title>
	</data>
	<data type="text">
		<id>text_5</id>
		<title>Typ predplatného</title>
	</data>
	<data type="boolean">
		<id>boolean_1</id>
		<title>Automatické predĺženie</title>
		<init>false</init>
	</data>
	<data type="number">
		<id>number_3</id>
		<title>Predĺžiť o </title>
		<placeholder>placeholder</placeholder>
		<desc>mesiacov</desc>
		<init>0</init>
	</data>
	<data type="text">
		<id>text_7</id>
		<title>ends</title>
		<placeholder>placeholder</placeholder>
		<desc>description</desc>
		<init>value</init>
	</data>
	<data type="text">
		<id>text_8</id>
		<title>userId</title>
		<placeholder>placeholder</placeholder>
		<desc>description</desc>
		<init>value</init>
	</data>
	<data type="text">
		<id>text_6</id>
		<title>Stav</title>
		<init>Vaše predplatné bolo zrušené</init>
	</data>
	<!-- I18NS -->
	<!-- TRANSITIONS -->
	<transition>
		<id>2</id>
		<x>100</x>
		<y>220</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Vytvoriť</label>
		<icon>create</icon>
		<assignPolicy>auto</assignPolicy>
		<dataGroup>
			<id>DataGroup_3</id>
			<dataRef>
				<id>text_8</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>4</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<dataGroup>
			<id>DataGroup_2</id>
			<dataRef>
				<id>text_7</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>4</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<dataGroup>
			<id>DataGroup_1</id>
			<dataRef>
				<id>text_0</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>4</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<dataGroup>
			<id>DataGroup_0</id>
			<dataRef>
				<id>enumeration_0</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
					<action trigger="get">
						typy: f.this;
						def sluzba = findCase({it.processIdentifier.eq("5f86b23ef9ac3b272d6c7779_Služba")})
						
						change typy options {
							sluzba.dataSet["subscriptionType"].options
						}						
					</action>
					<action trigger="set">
						test: f.text_0,
						predplatne: f.this;

						change test value {
							predplatne.value.toString()
						}
					</action>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>boolean_0</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>2</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance></appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>number_0</id>
				<logic>
					<behavior>visible</behavior>
					<action trigger="get">
						konto: f.number_0;
						
						
						def user = findCase({it.processIdentifier.eq("5f86b23ef9ac3b272d6c7779_User")});
						
						change konto value {
							user.dataSet["number_3"].value
						}
						
						
					</action>
				</logic>
				<layout>
					<x>2</x>
					<y>2</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>number_1</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>3</x>
					<y>2</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>number_2</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
					<action trigger="set">
						suma: f.number_1,
						ends: f.text_7,
						mesiac: f.this,
						start: f.text_0,						
						predplatne: f.enumeration_0;
						
						
						def sluzba = findCase({it.processIdentifier.eq("5f86b23ef9ac3b272d6c7779_Služba")})																	
						
						def prices = sluzba.dataSet["subscriptionPrice"].options						
						def currentPrice;
						
						for (entry in prices) {
							if(entry.key.equals(predplatne.value.toString()))
							{
								currentPrice = entry.value as String
							}
						}									
						
						change suma value {
							mesiac.value * (currentPrice as Double)
						};						
						
					Date date = new Date(); 
	
					change start value {
						date.toString();
					}
						
					def poc = (Integer) mesiac.value;
					def a = null;
					use (groovy.time.TimeCategory) {     
							a = date+poc.months
						 }
						
					change  ends value {
						a.toString();
					}
						
					</action>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
	</transition>
	<transition>
		<id>3</id>
		<x>340</x>
		<y>220</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Zaplatiť</label>
		<icon>attach_money</icon>
		<assignPolicy>auto</assignPolicy>
		<event type="assign">
			<id>3_assign</id>
			<actions phase="post">
				<action>
				userId: f.text_8,
				suma: f.number_1;
				
				
				
	def userCase = findCase({it.processIdentifier.eq("5f86b23ef9ac3b272d6c7779_User")})
	finishTask("3");

if(suma.value &lt;= userCase.dataSet["number_3"].value)
{	
	def konto = userCase.dataSet["number_3"].value - suma.value;

	def profil = findTask({it.caseId.eq(userCase.stringId) &amp; it.transitionId.eq("5")});
	
	setData(profil, [
			 "number_3": [
			 "value": konto,
			 "type" : "number"
			 ],
			])
	
	 
	
    assignTask("61");	
}
else{
    def failure = findTask({ it.transitionId.eq("63")})
    assignTask(failure) 
}
</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>13</id>
		<x>340</x>
		<y>100</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Predĺžiť predplatné</label>
		<icon>west</icon>
		<dataGroup>
			<id>DataGroup_0</id>
			<dataRef>
				<id>number_3</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="finish">
			<id>13_finish</id>
			<actions phase="post">
				<action>				
					suma: f.number_1,
					ends: f.text_7,
					mesiac: f.number_3,
					
					predplatne: f.enumeration_0;
						
						
						def sluzba = findCase({it.processIdentifier.eq("5f86b23ef9ac3b272d6c7779_Služba")})																	
						
						def prices = sluzba.dataSet["subscriptionPrice"].options						
						def currentPrice;
						
						for (entry in prices) {
							if(entry.key.equals(predplatne.value.toString()))
							{
								currentPrice = entry.value as String
							}
						}									
						
						change suma value {
							mesiac.value * (currentPrice as Double)
						};	

					def date = new Date(ends.value as String);
					def poc = (Integer) mesiac.value;
					def a = null;
					use (groovy.time.TimeCategory) {     
							a = date+poc.months
						 }
						
					change  ends value {
						a.toString();
					}
				
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>22</id>
		<x>95</x>
		<y>330</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Kontrola stavu predplatného</label>
		<icon>menu_book</icon>
		<dataGroup>
			<id>DataGroup_2</id>
			<dataRef>
				<id>text_6</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>3</y>
					<rows>2</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<dataGroup>
			<id>DataGroup_0</id>
			<dataRef>
				<id>boolean_1</id>
				<logic>
					<behavior>editable</behavior>
					<action trigger="get">predplatne: f.boolean_0,
toto: f.boolean_1;
change toto value{
    predplatne.value
}</action>
					<action trigger="set">predplatne: f.boolean_0,
toto: f.boolean_1;
change predplatne value{
    toto.value
}</action>
				</logic>
				<layout>
					<x>0</x>
					<y>2</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance></appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<dataGroup>
			<id>DataGroup_1</id>
			<dataRef>
				<id>text_5</id>
				<logic>
					<behavior>visible</behavior>
					<action trigger="get">
					predplatne: f.enumeration_0,
					pred: f.this;
					
					
					def sluzba = findCase({it.processIdentifier.eq("5f86b23ef9ac3b272d6c7779_Služba")})																	
					
					def subs = sluzba.dataSet["subscriptionType"].options						
					def current;
					
					for (entry in subs) {
						if(entry.key.equals(predplatne.value.toString()))
						{
							current = entry.value as String
						}
					}			
					
				change  pred value{
					current	
				}
				</action>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>text_2</id>
				<logic>
					<behavior>visible</behavior>
					<action trigger="get">
					platneOd: f.text_0,
					platne: f.this;		
					
				change  platne value{
					platneOd.value
				}
				</action>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>text_3</id>
				<logic>
					<behavior>visible</behavior>
					<action trigger="get">
					platneDo: f.this,
					platneDoaa: f.text_7;													
			
						
					change  platneDo value {
						platneDoaa.value;
					}
					
				
				</action>
				</logic>
				<layout>
					<x>2</x>
					<y>1</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
	</transition>
	<transition>
		<id>35</id>
		<x>896</x>
		<y>240</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Vypršalo</label>
		<icon>timer_off</icon>
		<finishPolicy>auto_no_data</finishPolicy>
		<roleRef>
			<id>Admin</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>User</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
			</logic>
		</roleRef>
		<event type="finish">
			<id>35_assign</id>
			<actions phase="post">
				<action>
				autoDaco: f.boolean_0;
				
				if(autoDaco.value)
				{
					async.run 
						{
							assignTask("48");							
						}
				
					
				}
				else
				{
					async.run 
						{
							assignTask("49");						
						}
				}
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>48</id>
		<x>620</x>
		<y>100</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Automatické predĺženie</label>
		<icon>autorenew</icon>
		<roleRef>
			<id>User</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>Admin</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<event type="assign">
			<id>48_assign</id>
			<actions phase="post">
				<action>
					suma: f.number_1,
					ends: f.text_7,									
					predplatne: f.enumeration_0;
						
						
						def sluzba = findCase({it.processIdentifier.eq("5f86b23ef9ac3b272d6c7779_Služba")})																	
						
						def prices = sluzba.dataSet["subscriptionPrice"].options						
						def currentPrice;
						
						for (entry in prices) {
							if(entry.key.equals(predplatne.value.toString()))
							{
								currentPrice = entry.value as String
							}
						}									
						
						change suma value {
							1 * (currentPrice as Double)
						};	

					def date = new Date(ends.value as String);					
					def a = null;
					use (groovy.time.TimeCategory) {     
							a = date+1.months
						 }
						
					change  ends value {
						a.toString();
					}
					
					
					
					async.run
					{
						finishTask("48");
					}				
										
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>49</id>
		<x>1092</x>
		<y>248</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Zrušenie predplatného</label>
		<icon>close</icon>
		<roleRef>
			<id>User</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>Admin</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<event type="assign">
			<id>49_assign</id>
			<actions phase="post">
				<action>
					stav: f.text_6,
					autoa: f.boolean_1,
					trans: t.22;
					
					make stav,visible on trans when {
						1 == 1;
					}
					
					make autoa,hidden on trans when {
						1 == 1;
					}
					
					async.run
					{
						finishTask("49");
					}				
										
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>61</id>
		<x>540</x>
		<y>220</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Platba úspešná</label>
		<icon>playlist_add_check</icon>
		<finishPolicy>auto_no_data</finishPolicy>
		<event type="assign">
			<id>61_assign</id>
			<actions phase="post">
				<action>
					
					async.run
					{
						finishTask("61");
					}
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>63</id>
		<x>420</x>
		<y>300</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Platba neúspešná</label>
		<icon>money_off</icon>
		<dataGroup>
			<id>DataGroup_0</id>
			<dataRef>
				<id>text_4</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>button_0</id>
				<logic>
					<behavior>editable</behavior>
					<action trigger="set">
					
	
					finishTask("63");
						
					assignTask("74");						
					
					
					
					</action>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance></appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>button_1</id>
				<logic>
					<behavior>editable</behavior>
					<action trigger="set">				
					finishTask("63");						
					assignTask("75");
					</action>
				</logic>
				<layout>
					<x>2</x>
					<y>1</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance></appearance>
				</layout>
			</dataRef>
		</dataGroup>
	</transition>
	<transition>
		<id>74</id>
		<x>218</x>
		<y>380</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Pokúsiť sa zaplatiť</label>
		<icon>refresh</icon>
		<finishPolicy>auto_no_data</finishPolicy>
	</transition>
	<transition>
		<id>75</id>
		<x>498</x>
		<y>469</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Zrušenie predplatného</label>
		<icon>close</icon>
		<finishPolicy>auto_no_data</finishPolicy>
		<event type="assign">
			<id>75_assign</id>
			<actions phase="post">
				<action>
					stav: f.text_6,
					autoa: f.boolean_1,
					trans: t.22;
					
					make stav,visible on trans when {
						1 == 1;
					}			

					make autoa,hidden on trans when {
						1 == 1;
					}
				</action>
			</actions>
		</event>
	</transition>
	<!-- PLACES -->
	<place>
		<id>1</id>
		<x>100</x>
		<y>100</y>
		<label></label>
		<tokens>1</tokens>
		<static>false</static>
	</place>
	<place>
		<id>5</id>
		<x>220</x>
		<y>220</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>6</id>
		<x>660</x>
		<y>220</y>
		<label>Predlatné je aktívne</label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>47</id>
		<x>941</x>
		<y>146</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>59</id>
		<x>420</x>
		<y>220</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>70</id>
		<x>677</x>
		<y>471</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>76</id>
		<x>416</x>
		<y>383</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<!-- ARCS -->
	<arc>
		<id>7</id>
		<type>regular</type>
		<sourceId>1</sourceId>
		<destinationId>2</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>8</id>
		<type>regular</type>
		<sourceId>2</sourceId>
		<destinationId>5</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>9</id>
		<type>regular</type>
		<sourceId>5</sourceId>
		<destinationId>3</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>18</id>
		<type>regular</type>
		<sourceId>13</sourceId>
		<destinationId>5</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>19</id>
		<type>regular</type>
		<sourceId>6</sourceId>
		<destinationId>13</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>50</id>
		<type>regular</type>
		<sourceId>35</sourceId>
		<destinationId>47</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>51</id>
		<type>regular</type>
		<sourceId>47</sourceId>
		<destinationId>48</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>52</id>
		<type>regular</type>
		<sourceId>47</sourceId>
		<destinationId>49</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>56</id>
		<type>regular</type>
		<sourceId>48</sourceId>
		<destinationId>5</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>60</id>
		<type>regular</type>
		<sourceId>3</sourceId>
		<destinationId>59</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>64</id>
		<type>regular</type>
		<sourceId>59</sourceId>
		<destinationId>61</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>65</id>
		<type>regular</type>
		<sourceId>59</sourceId>
		<destinationId>63</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>67</id>
		<type>regular</type>
		<sourceId>61</sourceId>
		<destinationId>6</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>69</id>
		<type>regular</type>
		<sourceId>6</sourceId>
		<destinationId>35</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>71</id>
		<type>regular</type>
		<sourceId>49</sourceId>
		<destinationId>70</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>77</id>
		<type>regular</type>
		<sourceId>63</sourceId>
		<destinationId>76</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>78</id>
		<type>regular</type>
		<sourceId>76</sourceId>
		<destinationId>74</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>79</id>
		<type>regular</type>
		<sourceId>76</sourceId>
		<destinationId>75</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>80</id>
		<type>regular</type>
		<sourceId>74</sourceId>
		<destinationId>5</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>81</id>
		<type>regular</type>
		<sourceId>75</sourceId>
		<destinationId>70</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
</document>
